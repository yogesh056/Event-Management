{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Modules/Events/Feed/CommentModal.jsx\";\nimport React from 'react';\nimport { Comment, Avatar, Form, Button, List, Input, Modal, Icon } from 'antd';\nimport moment from 'moment';\nconst TextArea = Input.TextArea;\n\nconst CommentList = ({\n  comments\n}) => React.createElement(List, {\n  dataSource: comments,\n  header: `${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`,\n  itemLayout: \"horizontal\",\n  renderItem: props => React.createElement(Comment, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n});\n\nconst Editor = ({\n  onChange,\n  onSubmit,\n  submitting,\n  value\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(Form.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(TextArea, {\n  rows: 4,\n  onChange: onChange,\n  value: value,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n})), React.createElement(Form.Item, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}, React.createElement(Button, {\n  htmlType: \"submit\",\n  loading: submitting,\n  onClick: onSubmit,\n  type: \"primary\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(Icon, {\n  type: \"message\",\n  key: \"skeleton-message\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}), \" Add Comment\")));\n\nexport default class CommentModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getAllEvents = async () => {\n      let response = await API.post('/events/getComments', {\n        even\n      });\n      response.data.code === 200 ? message.success(response.data.msg, 4) : message.error(response.data.msg, 4);\n      console.log(\"res\", response.data.response);\n      this.setState({\n        events: response.data.response,\n        eventLoading: false\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (!this.state.value) {\n        return;\n      }\n\n      this.setState({\n        submitting: true\n      });\n      setTimeout(() => {\n        this.setState({\n          submitting: false,\n          value: '',\n          comments: [{\n            author: 'Han Solo',\n            avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n            content: React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66\n              },\n              __self: this\n            }, this.state.value),\n            datetime: moment().fromNow()\n          }, ...this.state.comments]\n        });\n      }, 1000);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value: e.target.value\n      });\n    };\n\n    console.log(\"CM\", this.props);\n    this.state = {\n      comments: [],\n      submitting: false,\n      value: ''\n    };\n  }\n\n  componentWillMount() {\n    this.getAComments();\n  }\n\n  render() {\n    const _this$props = this.props,\n          visible = _this$props.visible,\n          confirmLoading = _this$props.confirmLoading,\n          name = _this$props.name;\n    const _this$state = this.state,\n          comments = _this$state.comments,\n          submitting = _this$state.submitting,\n          value = _this$state.value;\n    return React.createElement(Modal, {\n      width: 900,\n      title: name,\n      visible: visible,\n      onOk: this.props.handleOk,\n      confirmLoading: confirmLoading,\n      onCancel: this.props.handleCancel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Comment, {\n      avatar: React.createElement(Avatar, {\n        src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n        alt: \"Han Solo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }),\n      content: React.createElement(Editor, {\n        onChange: this.handleChange,\n        onSubmit: this.handleSubmit,\n        submitting: submitting,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), comments.length > 0 && React.createElement(CommentList, {\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Modules/Events/Feed/CommentModal.jsx"],"names":["React","Comment","Avatar","Form","Button","List","Input","Modal","Icon","moment","TextArea","CommentList","comments","length","props","Editor","onChange","onSubmit","submitting","value","CommentModal","Component","constructor","getAllEvents","response","API","post","even","data","code","message","success","msg","error","console","log","setState","events","eventLoading","handleSubmit","state","setTimeout","author","avatar","content","datetime","fromNow","handleChange","e","target","componentWillMount","getAComments","render","visible","confirmLoading","name","handleOk","handleCancel"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Comment, Avatar, Form, Button, List, Input, Modal,Icon } from 'antd';\nimport moment from 'moment';\n\nconst { TextArea } = Input;\n\nconst CommentList = ({ comments }) => (\n    <List\n        dataSource={comments}\n        header={`${comments.length} ${comments.length > 1 ? 'replies' : 'reply'}`}\n        itemLayout=\"horizontal\"\n        renderItem={props => <Comment {...props} />}\n    />\n);\n\nconst Editor = ({ onChange, onSubmit, submitting, value }) => (\n    <div>\n        <Form.Item>\n            <TextArea rows={4} onChange={onChange} value={value} />\n        </Form.Item>\n        <Form.Item>\n            <Button htmlType=\"submit\" loading={submitting} onClick={onSubmit} type=\"primary\">\n            <Icon type=\"message\" key=\"skeleton-message\" /> Add Comment\n      </Button>\n        </Form.Item>\n    </div>\n);\nexport default class CommentModal extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(\"CM\", this.props)\n        this.state = {\n            comments: [],\n            submitting: false,\n            value: '',\n        };\n    }\n    componentWillMount() {\n        this.getAComments()\n      }\n      getAllEvents = async () => {\n        let response = await API.post('/events/getComments',{even})\n        response.data.code === 200 ? message.success(response.data.msg, 4) : message.error(response.data.msg, 4);\n        console.log(\"res\", response.data.response)\n    \n        this.setState({ events: response.data.response, eventLoading: false })\n    \n      }\n    handleSubmit = () => {\n        if (!this.state.value) {\n          return;\n        }\n    \n        this.setState({\n          submitting: true,\n        });\n    \n        setTimeout(() => {\n          this.setState({\n            submitting: false,\n            value: '',\n            comments: [\n              {\n                author: 'Han Solo',\n                avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n                content: <p>{this.state.value}</p>,\n                datetime: moment().fromNow(),\n              },\n              ...this.state.comments,\n            ],\n          });\n        }, 1000);\n      };\n    \n      handleChange = e => {\n        this.setState({\n          value: e.target.value,\n        });\n      };\n    render() {\n        const { visible, confirmLoading ,name} = this.props;\n        const { comments, submitting, value } = this.state;\n        return (\n            <Modal\n            width={900}\n                title={name}\n                visible={visible}\n                onOk={this.props.handleOk}\n                confirmLoading={confirmLoading}\n                onCancel={this.props.handleCancel}\n            >\n                <div>\n                    <Comment\n                        avatar={\n                            <Avatar\n                                src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\"\n                                alt=\"Han Solo\"\n                            />\n                        }\n                        content={\n                            <Editor\n                                onChange={this.handleChange}\n                                onSubmit={this.handleSubmit}\n                                submitting={submitting}\n                                value={value}\n                            />\n                        }\n                    />\n                    {comments.length > 0 && <CommentList comments={comments} />}\n                </div>\n            </Modal>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}