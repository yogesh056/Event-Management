{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Signin/VerifyMail.jsx\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Form, Input, Select, Row, Col, Icon, Steps, DatePicker, message, Button, Layout } from 'antd';\nimport moment from 'moment';\nimport API from '../../middleware/api';\nconst Option = Select.Option;\n\nclass VerifyMail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll(async (err, values) => {\n        if (!err) {\n          console.log(this.props.value);\n          let response;\n          this.props.value.secretKey = values.secretKey;\n\n          try {\n            response = await API.post('/users/signin', {\n              \"first_name\": this.props.value.first_name,\n              \"last_name\": this.props.value.last_name,\n              \"user_name\": this.props.value.user_name,\n              \"password\": this.props.value.password,\n              \"secretKey\": values.secretKey,\n              \"email\": this.props.value.email,\n              \"phone\": this.props.value.phone,\n              \"dob\": this.props.value.dob,\n              \"college\": 1,\n              \"city\": 1,\n              \"state\": 1,\n              \"gender\": this.props.value.gender,\n              \"image\": \"testImage\"\n            });\n            message.success(response.data.msg, 4);\n            console.log(response.data);\n            this.props.next(values);\n            this.props.history.push(\"/login\");\n          } catch (e) {\n            message.error(e.msg, 4);\n          }\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n  }\n\n  render() {\n    const current = this.state.current;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Secret Key\",\n      extra: \"We must make sure that your are a valid user.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, getFieldDecorator('secretKey', {\n      rules: [{\n        required: true,\n        message: 'Please input the secret key you got!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Re-Send\")))), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Button, {\n      onClick: this.props.previous,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Previous\"));\n  }\n\n}\n\nexport const WrappedVerifyMail = Form.create({\n  name: 'register'\n})(withRouter(VerifyMail));","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Signin/VerifyMail.jsx"],"names":["React","Drawer","Form","Input","Select","Row","Col","Icon","Steps","DatePicker","message","Button","Layout","moment","API","Option","VerifyMail","Component","constructor","props","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","console","log","value","response","secretKey","post","first_name","last_name","user_name","password","email","phone","dob","gender","success","data","msg","next","history","push","error","handleConfirmBlur","target","setState","confirmDirty","state","autoCompleteResult","render","current","getFieldDecorator","rules","required","previous","WrappedVerifyMail","create","name","withRouter"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport {\n    Drawer,\n    Form,\n    Input,\n    Select,\n    Row,\n    Col,\n    Icon,\n    Steps,\n    DatePicker,\n    message,\n    Button,\n    Layout\n} from 'antd';\nimport moment from 'moment';\nimport API from '../../middleware/api';\nconst { Option } = Select;\nclass VerifyMail extends React.Component {\n    constructor(props)\n{\n        super(props);\n        this.state = {\n          confirmDirty: false,\n          autoCompleteResult: [],\n        };\n    }\n\n\n    handleSubmit =(e)=> {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async(err, values) => {\n            if (!err) {\n                console.log(this.props.value)\n                let response\n                this.props.value.secretKey = values.secretKey\n                try{\n                    response = await API.post('/users/signin',\n                    {\n                        \"first_name\": this.props.value.first_name,\n                        \"last_name\": this.props.value.last_name,\n                        \"user_name\": this.props.value.user_name,\n                        \"password\": this.props.value.password,\n                        \"secretKey\": values.secretKey,\n                        \"email\": this.props.value.email,\n                        \"phone\": this.props.value.phone,\n                        \"dob\": this.props.value.dob,\n                        \"college\": 1,\n                        \"city\": 1,\n                        \"state\": 1,\n                        \"gender\": this.props.value.gender,\n                        \"image\": \"testImage\"\n                    })\n                    message.success(response.data.msg,4);\n                    console.log(response.data)\n                    this.props.next(values)\n                    this.props.history.push(\"/login\")\n                  }\n                  catch(e)\n                  {\n                    message.error(e.msg,4);\n                  }\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n\n    render() {\n        const { current } = this.state;\n\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n\n\n                <Form.Item label=\"Secret Key\" extra=\"We must make sure that your are a valid user.\">\n                    <Row gutter={8}>\n                        <Col span={12}>\n                            {getFieldDecorator('secretKey', {\n                                rules: [{ required: true, message: 'Please input the secret key you got!' }],\n                            })(<Input />)}\n                        </Col>\n                        <Col span={12}>\n                            <Button>Re-Send</Button>\n                        </Col>\n                    </Row>\n                </Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Register\n          </Button>\n                <Button onClick={this.props.previous}>\n                    Previous\n          </Button>\n            </Form>\n\n        );\n    }\n}\nexport const WrappedVerifyMail = Form.create({ name: 'register' })(withRouter(VerifyMail));\n"]},"metadata":{},"sourceType":"module"}