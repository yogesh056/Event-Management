{"ast":null,"code":"import _objectWithoutProperties from \"/Users/yogeshwaranramesh/College/Event-Management/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/auth/ProtectedRoute.jsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { openSnackbar } from '../components/Notifier/Snackbar/Snackbar';\n\nconst checkProtected = () => {\n  try {\n    const token = localStorage.getItem('token'); // If No Token Present\n\n    if (!token) throw new Error('No Token Found'); //if (token.length !== 888) throw new Error(\"Wrong token\")\n\n    return true; // eslint-disable-next-line no-unreachable\n  } catch (err) {\n    // openSnackbar({ message: 'Please Login Again', variant: 'error' });\n    console.log('Check Protected Err', err.message);\n    localStorage.removeItem('token');\n    return false;\n  }\n};\n\nconst ProtectedRoute = (_ref) => {\n  let Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => checkProtected() ? React.createElement(Component, Object.assign({}, props, {\n      component: Component,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location,\n          statusCode: '404',\n          errorMessage: 'Please login again'\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nexport default ProtectedRoute;","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/auth/ProtectedRoute.jsx"],"names":["React","Route","Redirect","openSnackbar","checkProtected","token","localStorage","getItem","Error","err","console","log","message","removeItem","ProtectedRoute","Component","component","rest","props","pathname","state","from","location","statusCode","errorMessage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,YAAT,QAA6B,0CAA7B;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAC5B,MAAI;AACH,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd,CADG,CAGH;;AACA,QAAI,CAACF,KAAL,EAAY,MAAM,IAAIG,KAAJ,CAAU,gBAAV,CAAN,CAJT,CAMH;;AAEA,WAAO,IAAP,CARG,CASH;AACA,GAVD,CAUE,OAAOC,GAAP,EAAY;AACb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAG,CAACG,OAAvC;AACAN,IAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB;AACA,WAAO,KAAP;AACA;AACD,CAjBD;;AAmBA,MAAMC,cAAc,GAAG,UAAuC;AAAA,MAAzBC,SAAyB,QAApCC,SAAoC;AAAA,MAAXC,IAAW;;AAC7D,SACC,oBAAC,KAAD,oBACKA,IADL;AAEC,IAAA,MAAM,EAAGC,KAAD,IACPd,cAAc,KACb,oBAAC,SAAD,oBAAec,KAAf;AAAsB,MAAA,SAAS,EAAEH,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADa,GAGb,oBAAC,QAAD;AACC,MAAA,EAAE,EAAE;AACHI,QAAAA,QAAQ,EAAE,QADP;AAEHC,QAAAA,KAAK,EAAE;AACNC,UAAAA,IAAI,EAAEH,KAAK,CAACI,QADN;AAENC,UAAAA,UAAU,EAAE,KAFN;AAGNC,UAAAA,YAAY,EAAE;AAHR;AAFJ,OADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAoBA,CArBD;;AAuBA,eAAeV,cAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { openSnackbar } from '../components/Notifier/Snackbar/Snackbar';\n\nconst checkProtected = () => {\n\ttry {\n\t\tconst token = localStorage.getItem('token');\n\n\t\t// If No Token Present\n\t\tif (!token) throw new Error('No Token Found');\n\n\t\t//if (token.length !== 888) throw new Error(\"Wrong token\")\n\n\t\treturn true;\n\t\t// eslint-disable-next-line no-unreachable\n\t} catch (err) {\n\t\t// openSnackbar({ message: 'Please Login Again', variant: 'error' });\n\t\tconsole.log('Check Protected Err', err.message);\n\t\tlocalStorage.removeItem('token');\n\t\treturn false;\n\t}\n};\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={(props) =>\n\t\t\t\tcheckProtected() ? (\n\t\t\t\t\t<Component {...props} component={Component} />\n\t\t\t\t) : (\n\t\t\t\t\t<Redirect\n\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\tpathname: '/login',\n\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\tfrom: props.location,\n\t\t\t\t\t\t\t\tstatusCode: '404',\n\t\t\t\t\t\t\t\terrorMessage: 'Please login again'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t/>\n\t);\n};\n\nexport default ProtectedRoute;\n"]},"metadata":{},"sourceType":"module"}