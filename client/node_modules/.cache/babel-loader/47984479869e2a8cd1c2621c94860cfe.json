{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Modules/Events/AddEvent.jsx\";\nimport { Drawer, Form, Button, Col, Row, Input, Select, DatePicker, Icon, message } from 'antd';\nimport React, { Component } from 'react';\nimport AsyncSelect from '../../Inputs/AsyncSelect';\nimport { storage } from '../../../firebase/index';\nimport API from \"../../../middleware/api\";\nimport moment from 'moment';\nimport GoogleMaps from \"../../GoogleMaps/GoogleMaps\";\nconst Option = Select.Option;\n\nclass EventForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.uploadImage = e => {\n      const img = e.target.files[0];\n      this.setState({\n        img,\n        loading: true\n      });\n      const uploadTask = storage.ref(`images/${img.name}`).put(img);\n      uploadTask.on('state_changed', snapshot => {}, error => {\n        console.log(error);\n      }, () => {\n        storage.ref('images').child(img.name).getDownloadURL().then(url => {\n          console.log('uuu', url);\n          this.setState({\n            imgurl: url,\n            loading: false\n          }, () => {\n            console.log('123', this.state.imgurl);\n          });\n        });\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll(async (err, values) => {\n        if (!err) {\n          values.college = 1;\n          values.city = 2;\n          values.state = 3;\n          values.UserId = localStorage.getItem('user_id').id;\n          values.images = this.state.imgurl;\n          console.log(values);\n          let response;\n\n          try {\n            response = await API.post('/events/addEvent', {\n              name: values.name,\n              description: values.description,\n              image: values.image,\n              state: values.state,\n              city: values.city,\n              college: values.college,\n              start_date: values.start_date\n            });\n            console.log(response);\n            message.success(response.data.msg, 4);\n            this.onClose();\n          } catch (e) {\n            message.error(e.msg, 4);\n          }\n        }\n      }); // handleConfirmBlur = e => {\n      //   const { value } = e.target;\n      //   this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n      // };\n    };\n\n    this.state = {\n      confirmDirty: false,\n      loading: false\n    };\n  }\n\n  render() {\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    const loading = this.state.loading;\n    return React.createElement(GoogleMaps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport const AddEvent = Form.create()(EventForm);","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Modules/Events/AddEvent.jsx"],"names":["Drawer","Form","Button","Col","Row","Input","Select","DatePicker","Icon","message","React","Component","AsyncSelect","storage","API","moment","GoogleMaps","Option","EventForm","constructor","props","showDrawer","setState","visible","onClose","uploadImage","e","img","target","files","loading","uploadTask","ref","name","put","on","snapshot","error","console","log","child","getDownloadURL","then","url","imgurl","state","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","college","city","UserId","localStorage","getItem","id","images","response","post","description","image","start_date","success","data","msg","confirmDirty","render","getFieldDecorator","AddEvent","create"],"mappings":"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","sourcesContent":["import { Drawer, Form, Button, Col, Row, Input, Select, DatePicker, Icon, message } from 'antd';\nimport React, { Component } from 'react'\nimport AsyncSelect from '../../Inputs/AsyncSelect';\nimport { storage } from '../../../firebase/index';\nimport API from \"../../../middleware/api\"\nimport moment from 'moment';\nimport GoogleMaps from \"../../GoogleMaps/GoogleMaps\"\nconst { Option } = Select;\n\nclass EventForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmDirty: false,\n      loading: false,\n    };\n  }\n\n  showDrawer = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n\n  onClose = () => {\n    this.setState({\n      visible: false,\n    });\n  };\n  uploadImage = (e) => {\n    const img = e.target.files[0];\n    this.setState(({ img, loading: true }));\n    const uploadTask = storage.ref(`images/${img.name}`).put(img);\n    uploadTask.on('state_changed', (snapshot) => { },\n      (error) => { console.log(error) },\n      () => {\n        storage.ref('images').child(img.name).getDownloadURL().then(url => {\n          console.log('uuu', url)\n          this.setState({ imgurl: url, loading: false }, () => {\n            console.log('123', this.state.imgurl)\n          })\n\n        })\n      })\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll(async (err, values) => {\n      if (!err) {\n        values.college = 1\n        values.city = 2\n        values.state = 3\n        values.UserId=localStorage.getItem('user_id').id\n        values.images = this.state.imgurl\n        console.log(values)\n        let response\n        try {\n          response = await API.post('/events/addEvent', { name: values.name, description: values.description, image: values.image, state: values.state, city: values.city, college: values.college, start_date: values.start_date })\n          console.log(response)\n          message.success(response.data.msg, 4);\n          this.onClose()\n\n        }\n        catch (e) {\n          message.error(e.msg, 4);\n        }\n\n      }\n\n    });\n    // handleConfirmBlur = e => {\n    //   const { value } = e.target;\n    //   this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    // };\n  };\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { loading } = this.state\n    return (\n      <GoogleMaps/>)\n  }\n}\n\nexport const AddEvent = Form.create()(EventForm);\n\n"]},"metadata":{},"sourceType":"module"}