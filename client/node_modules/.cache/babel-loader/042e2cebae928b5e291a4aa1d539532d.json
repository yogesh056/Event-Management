{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Modules/Events/CardContainer/CardContainer.jsx\";\nimport { Skeleton, Switch, List, Avatar, Icon, Tooltip, Progress, message, Typography, Tag, Divider, Card } from 'antd';\nimport React from 'react';\nimport CommentModal from '../Feed/CommentModal';\nimport { AddEvent } from '../AddEvent';\nimport API from \"../../../../middleware/api\";\nconst Text = Typography.Text;\nconst Meta = Card.Meta; // const listData = [];\n// for (let i = 0; i < 3; i++) {\n//   listData.push({\n//     href: 'http://ant.design',\n//     title: `ant design part ${i}`,\n//     avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n//     description:\n//       'Ant Design, a design language for background applications, is refined by Ant UED Team.',\n//     content:\n//       'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\n//   });\n// }\n\nexport default class CardContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventLoading: true,\n      visible: false,\n      confirmLoading: false,\n      likes: 123,\n      name: \"hello\"\n    };\n\n    this.getAllEvents = async () => {\n      let response = await API.get('/events/getEvents');\n      response.data.code === 200 ? message.success(response.data.msg, 4) : message.error(response.data.msg, 4);\n      console.log(\"res\", response.data.response);\n      this.setState({\n        events: response.data.response,\n        eventLoading: false\n      });\n    };\n\n    this.onChange = checked => {\n      this.setState({\n        loading: !checked\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.getAllEvents();\n  }\n\n  render() {\n    const _this$state = this.state,\n          eventLoading = _this$state.eventLoading,\n          visible = _this$state.visible,\n          confirmLoading = _this$state.confirmLoading,\n          likes = _this$state.likes,\n          name = _this$state.name,\n          events = _this$state.events;\n    return [React.createElement(AddEvent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(List, {\n      itemLayout: \"horizontal\",\n      dataSource: events,\n      renderItem: item => React.createElement(List.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Card, {\n        title: React.createElement(Meta, {\n          avatar: React.createElement(Avatar, {\n            src: item.user.image,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77\n            },\n            __self: this\n          }),\n          title: item.user.name,\n          description: \"a few second ago\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }),\n        style: {\n          width: 500\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Card, {\n        style: {\n          width: 452\n        },\n        className: \"main-wrap-card\",\n        cover: React.createElement(\"img\", {\n          alt: \"example\",\n          src: item.images,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }),\n        actions: [React.createElement(\"span\", {\n          key: \"comment-basic-like\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"Like\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"like-o\",\n          key: \"skeleton-star-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          style: {\n            paddingLeft: 8,\n            cursor: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, likes)), React.createElement(\"span\", {\n          key: \"comment-basic-like\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"DisLike\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"dislike-o\",\n          key: \"skeleton-like-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          style: {\n            paddingLeft: 8,\n            cursor: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, likes)), React.createElement(\"span\", {\n          key: \"comment-basic-like\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"Comment\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Icon, {\n          type: \"message\",\n          key: \"skeleton-message\",\n          onClick: this.showModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        })), React.createElement(\"span\", {\n          style: {\n            paddingLeft: 8,\n            cursor: 'auto'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, likes))],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Meta // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n      , {\n        title: item.name,\n        description: item.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })];\n  }\n\n}","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Modules/Events/CardContainer/CardContainer.jsx"],"names":["Skeleton","Switch","List","Avatar","Icon","Tooltip","Progress","message","Typography","Tag","Divider","Card","React","CommentModal","AddEvent","API","Text","Meta","CardContainer","Component","state","eventLoading","visible","confirmLoading","likes","name","getAllEvents","response","get","data","code","success","msg","error","console","log","setState","events","onChange","checked","loading","showModal","handleOk","ModalText","setTimeout","handleCancel","componentWillMount","render","item","user","image","width","images","paddingLeft","cursor","description"],"mappings":"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","sourcesContent":["import { Skeleton, Switch, List, Avatar, Icon, Tooltip, Progress, message, Typography, Tag, Divider, Card } from 'antd';\nimport React from 'react';\nimport CommentModal from '../Feed/CommentModal';\nimport { AddEvent } from '../AddEvent'\nimport API from \"../../../../middleware/api\"\nconst { Text } = Typography;\nconst { Meta } = Card;\n\n\n// const listData = [];\n// for (let i = 0; i < 3; i++) {\n//   listData.push({\n//     href: 'http://ant.design',\n//     title: `ant design part ${i}`,\n//     avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n//     description:\n//       'Ant Design, a design language for background applications, is refined by Ant UED Team.',\n//     content:\n//       'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\n//   });\n// }\nexport default class CardContainer extends React.Component {\n  state = {\n    eventLoading: true,\n    visible: false,\n    confirmLoading: false,\n    likes: 123,\n    name: \"hello\"\n  };\n  componentWillMount() {\n    this.getAllEvents()\n  }\n  getAllEvents = async () => {\n    let response = await API.get('/events/getEvents')\n    response.data.code === 200 ? message.success(response.data.msg, 4) : message.error(response.data.msg, 4);\n    console.log(\"res\", response.data.response)\n    this.setState({ events: response.data.response, eventLoading: false })\n  }\n  onChange = checked => {\n    this.setState({ loading: !checked });\n  };\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n  handleOk = () => {\n    this.setState({\n      ModalText: 'The modal will be closed after two seconds',\n      confirmLoading: true,\n    });\n    setTimeout(() => {\n      this.setState({\n        visible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  };\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n  render() {\n    const { eventLoading, visible, confirmLoading, likes, name, events } = this.state;\n\n    return (\n      [<AddEvent />,\n      <List\n        itemLayout=\"horizontal\"\n        dataSource={events}\n        renderItem={item => (\n          <List.Item>\n            <Card title={<Meta\n              avatar={<Avatar src={item.user.image} />}\n              title={item.user.name}\n              description=\"a few second ago\"\n            />}\n              style={{ width: 500 }}\n            >\n\n\n              <Card\n                style={{ width: 452 }}\n                className=\"main-wrap-card\"\n                cover={\n                  <img\n                    alt=\"example\"\n                    src={item.images}\n                  />\n                }\n                actions={[\n                  <span key=\"comment-basic-like\">\n                    <Tooltip title=\"Like\">\n                      <Icon type=\"like-o\" key=\"skeleton-star-o\" />\n                    </Tooltip>\n                    <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\n                  </span>,\n                  <span key=\"comment-basic-like\">\n                    <Tooltip title=\"DisLike\">\n                      <Icon type=\"dislike-o\" key=\"skeleton-like-o\" />\n                    </Tooltip>\n                    <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\n                  </span>,\n                  <span key=\"comment-basic-like\">\n                    <Tooltip title=\"Comment\">\n                      <Icon type=\"message\" key=\"skeleton-message\" onClick={this.showModal} />\n                    </Tooltip>\n                    <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\n                  </span>,\n                ]}\n              >\n                <Meta\n                  // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                  title={item.name}\n                  description={item.description}\n                />\n              </Card>\n            </Card>\n          </List.Item>)}\n      />\n      ]\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}