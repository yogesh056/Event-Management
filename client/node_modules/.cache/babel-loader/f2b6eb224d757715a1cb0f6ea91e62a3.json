{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Dashboard/Navbar/Navbar.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport 'antd/dist/antd.css';\nimport { Menu, Icon, Avatar, Badge } from 'antd';\nimport \"./Navbar.css\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport API from '../../../middleware/api';\nimport Auth from \"../../../auth/ProtectedRoute\";\nconst SubMenu = Menu.SubMenu; // import { WrappedLogin } from '../Login/Login'\n\nclass Navbar extends Component {\n  constructor() {\n    super();\n\n    this.logOut = () => {\n      localStorage.removeItem(\"user_id\");\n      Auth.signout();\n      this.props.history.push('/login');\n    };\n\n    this.handleClick = e => {\n      console.log('click ', e);\n      this.setState({\n        current: e.key\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.state = {\n      current: 'mail',\n      isLogged: false\n    };\n  }\n\n  componentWillMount() {\n    setTimeout(() => {\n      let userDetail = Auth.getUserDetails(isLogged);\n      console.log(\"user Id\", isLogged);\n\n      if (isLogged) {\n        this.getUserDetails(isLogged);\n      }\n    }, 2000);\n  } // {\n  //  let response= await API.post('/users/user',{user_id:isLogged})\n  //       let userDetails=response.data.response\n  //       console.log(userDetails,response)\n  //       this.setState({ isLogged: true ,userDetails},()=>{console.log(\"123\",this.state)})\n  // }\n\n\n  conditionalRender() {\n    const _this$state = this.state,\n          userDetails = _this$state.userDetails,\n          isLogged = _this$state.isLogged;\n    if (isLogged) return [React.createElement(Menu.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Badge, {\n      dot: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"notification\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))), React.createElement(SubMenu, {\n      title: React.createElement(Avatar, {\n        src: userDetails.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Menu.ItemGroup, {\n      title: userDetails.user_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      key: \"settings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Settings\")), React.createElement(Menu.Item, {\n      key: \"logout\",\n      onClick: this.logOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Logout\"))];\n  } // selectedKeys={[this.state.current]} \n\n\n  render() {\n    return React.createElement(Menu, {\n      onClick: this.handleClick,\n      mode: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.conditionalRender());\n  }\n\n}\n\nexport default withRouter(Navbar);","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Dashboard/Navbar/Navbar.jsx"],"names":["React","Component","Fragment","Menu","Icon","Avatar","Badge","Redirect","withRouter","Link","API","Auth","SubMenu","Navbar","constructor","logOut","localStorage","removeItem","signout","props","history","push","handleClick","e","console","log","setState","current","key","state","isLogged","componentWillMount","setTimeout","userDetail","getUserDetails","conditionalRender","userDetails","image","user_name","render"],"mappings":"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","sourcesContent":["\nimport React, { Component, Fragment } from \"react\";\nimport 'antd/dist/antd.css';\nimport { Menu, Icon, Avatar,Badge } from 'antd';\nimport \"./Navbar.css\"\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport {\n  Link\n} from \"react-router-dom\";\nimport API from '../../../middleware/api';\nimport Auth from \"../../../auth/ProtectedRoute\";\n\nconst { SubMenu } = Menu;\n// import { WrappedLogin } from '../Login/Login'\n class Navbar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      current: 'mail',\n      isLogged: false\n    };\n  }\n  componentWillMount() {\n    setTimeout(() => {\n    let userDetail=Auth.getUserDetails(isLogged)\n    console.log(\"user Id\",isLogged)\n    if (isLogged) {\n      this.getUserDetails(isLogged)\n    }\n  },2000)\n  }\n  \n  // {\n  //  let response= await API.post('/users/user',{user_id:isLogged})\n  //       let userDetails=response.data.response\n  //       console.log(userDetails,response)\n  //       this.setState({ isLogged: true ,userDetails},()=>{console.log(\"123\",this.state)})\n  // }\n  logOut=()=>\n  {\n    localStorage.removeItem(\"user_id\");\n    Auth.signout()\n    this.props.history.push('/login')\n\n  }\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    }, () => {\n      console.log(this.state)\n    });\n  };\n  conditionalRender() {\n    const {userDetails ,isLogged} = this.state\n    if(isLogged)\n      return(\n\n        [<Menu.Item>\n          <Badge dot>\n      <Icon type=\"notification\" />\n    </Badge>\n        </Menu.Item>,\n        <SubMenu\n          title={\n            <Avatar src={userDetails.image} />\n          }\n        >\n          <Menu.ItemGroup title={userDetails.user_name}>\n            <Menu.Item key=\"settings\">Settings</Menu.Item>\n            {/* <Menu.Item key=\"setting:2\">Option 2</Menu.Item> */}\n          </Menu.ItemGroup>\n          {/* <Menu.ItemGroup title=\"Item 2\"> */}\n          <Menu.Item key=\"logout\" onClick={this.logOut}>Logout</Menu.Item>\n          {/* <Menu.Item key=\"setting:4\">Option 4</Menu.Item> */}\n          {/* </Menu.ItemGroup> */}\n        </SubMenu>]\n      )\n  }\n  // selectedKeys={[this.state.current]} \n  render() {\n   \n    return (\n      <Menu onClick={this.handleClick} mode=\"horizontal\">\n\n        {this.conditionalRender()}\n\n      </Menu>\n    )\n  }\n}\nexport default withRouter(Navbar);"]},"metadata":{},"sourceType":"module"}