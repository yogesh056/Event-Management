{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Modules/Events/CardContainer/CardContainer.jsx\";\nimport { Skeleton, Switch, List, Avatar, Icon, Tooltip, Progress, message, Typography, Tag, Divider, Card } from 'antd';\nimport React from 'react';\nimport CommentModal from '../Feed/CommentModal';\nimport { AddEvent } from '../AddEvent';\nimport API from \"../../../../middleware/api\";\nconst Text = Typography.Text;\nconst Meta = Card.Meta; // const listData = [];\n// for (let i = 0; i < 3; i++) {\n//   listData.push({\n//     href: 'http://ant.design',\n//     title: `ant design part ${i}`,\n//     avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n//     description:\n//       'Ant Design, a design language for background applications, is refined by Ant UED Team.',\n//     content:\n//       'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\n//   });\n// }\n\nexport default class CardContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventLoading: true,\n      visible: false,\n      confirmLoading: false,\n      likes: 123,\n      name: \"hello\"\n    };\n\n    this.getAllEvents = async () => {\n      let response = await API.get('/events/getEvents');\n      response.data.code === 200 ? message.success(response.data.msg, 4) : message.error(response.data.msg, 4);\n      console.log(\"res\", response.data.response);\n      this.setState({\n        events: response.data.response,\n        eventLoading: false\n      });\n    };\n\n    this.onChange = checked => {\n      this.setState({\n        loading: !checked\n      });\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true\n      });\n      setTimeout(() => {\n        this.setState({\n          visible: false,\n          confirmLoading: false\n        });\n      }, 2000);\n    };\n\n    this.handleCancel = () => {\n      console.log('Clicked cancel button');\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.getAllEvents();\n  }\n\n  render() {\n    const _this$state = this.state,\n          eventLoading = _this$state.eventLoading,\n          visible = _this$state.visible,\n          confirmLoading = _this$state.confirmLoading,\n          likes = _this$state.likes,\n          name = _this$state.name,\n          events = _this$state.events;\n    return [React.createElement(AddEvent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), // <div className=\"list-events\">\n    //   <List\n    //     itemLayout=\"vertical\"\n    //     size=\"large\"\n    //     dataSource={events}\n    //     renderItem={item => (\n    //       <List.Item\n    //         key={item.name}\n    //         actions={\n    //           !eventLoading && [\n    //             <span key=\"comment-basic-like\">\n    //               <Tooltip title=\"Like\">\n    //               <Icon type=\"like-o\" key=\"skeleton-star-o\" />\n    //               </Tooltip>\n    //               <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\n    //             </span>,\n    //              <span key=\"comment-basic-like\">\n    //               <Tooltip title=\"Like\">\n    //               <Icon type=\"dislike-o\" key=\"skeleton-like-o\" />\n    //               </Tooltip>\n    //               <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\n    //             </span>,\n    //              <span key=\"comment-basic-like\">\n    //               <Tooltip title=\"Like\">\n    //               <Icon type=\"message\" key=\"skeleton-message\" onClick={this.showModal} />\n    //               </Tooltip>\n    //               <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\n    //             </span>,\n    //           ]\n    //         }\n    //         extra={\n    //           !eventLoading && (\n    //             <img\n    //               width={272}\n    //               alt=\"logo\"\n    //               src={item.images}\n    //             />\n    //           )\n    //         }\n    //       >\n    //               <CommentModal  name={item.name} user={item.user} event={item} showModal={this.showModal} handleCancel={this.handleCancel} confirmLoading={confirmLoading} visible={visible} handleOk={this.handleOk} />\n    //         <Skeleton loading={eventLoading} active avatar>\n    //           <List.Item.Meta\n    //             avatar={<Avatar src={item.user.image} />}\n    //             title={<a>{item.user.user_name}</a>}\n    //             // description={item.name}\n    //           />\n    //           <Meta title={item.name}/>\n    //           <Divider/>\n    //           <Text strong> {item.description}</Text>\n    //         </Skeleton>\n    //         <Progress percent={90} />\n    //       </List.Item>\n    //     )}\n    //   />\n    // </div>]\n    React.createElement(Card, {\n      title: React.createElement(Meta, {\n        avatar: React.createElement(Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }),\n        title: \"Card title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }),\n      style: {\n        width: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Card, {\n      style: {\n        width: 452\n      },\n      cover: React.createElement(\"img\", {\n        alt: \"example\",\n        src: \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }),\n      actions: [React.createElement(Icon, {\n        type: \"setting\",\n        key: \"setting\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"edit\",\n        key: \"edit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(Icon, {\n        type: \"ellipsis\",\n        key: \"ellipsis\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      })],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(Meta // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n    , {\n      title: \"Card title\",\n      description: \"This is the description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })))];\n  }\n\n}","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Modules/Events/CardContainer/CardContainer.jsx"],"names":["Skeleton","Switch","List","Avatar","Icon","Tooltip","Progress","message","Typography","Tag","Divider","Card","React","CommentModal","AddEvent","API","Text","Meta","CardContainer","Component","state","eventLoading","visible","confirmLoading","likes","name","getAllEvents","response","get","data","code","success","msg","error","console","log","setState","events","onChange","checked","loading","showModal","handleOk","ModalText","setTimeout","handleCancel","componentWillMount","render","width"],"mappings":"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","sourcesContent":["import { Skeleton, Switch, List, Avatar, Icon,Tooltip,Progress,message,Typography,Tag,Divider,Card} from 'antd';\nimport React from 'react';\nimport CommentModal from '../Feed/CommentModal';\nimport {AddEvent} from '../AddEvent'\nimport API from \"../../../../middleware/api\"\nconst { Text } = Typography;\nconst { Meta } = Card;\n\n\n// const listData = [];\n// for (let i = 0; i < 3; i++) {\n//   listData.push({\n//     href: 'http://ant.design',\n//     title: `ant design part ${i}`,\n//     avatar: 'https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png',\n//     description:\n//       'Ant Design, a design language for background applications, is refined by Ant UED Team.',\n//     content:\n//       'We supply a series of design principles, practical patterns and high quality design resources (Sketch and Axure), to help people create their product prototypes beautifully and efficiently.',\n//   });\n// }\nexport default class CardContainer extends React.Component {\n  state = {\n    eventLoading: true,\n    visible: false,\n    confirmLoading: false,\n    likes:123,\n    name:\"hello\"\n  };\n  componentWillMount()\n  {\n    this.getAllEvents()\n  }\n  getAllEvents =async()=>\n  {\n    let response= await API.get('/events/getEvents')\n    response.data.code===200?message.success(response.data.msg,4): message.error(response.data.msg,4); \n    console.log(\"res\",response.data.response)\n    this.setState({events:response.data.response,eventLoading:false})\n  }\n  onChange = checked => {\n    this.setState({ loading: !checked });\n  };\n  showModal = () => {\n    this.setState({\n      visible: true,\n    });\n  };\n  handleOk = () => {\n    this.setState({\n        ModalText: 'The modal will be closed after two seconds',\n        confirmLoading: true,\n    });\n    setTimeout(() => {\n        this.setState({\n            visible: false,\n            confirmLoading: false,\n        });\n    }, 2000);\n};\n\n  handleCancel = () => {\n    console.log('Clicked cancel button');\n    this.setState({\n      visible: false,\n    });\n  };\n  render() {\n    const { eventLoading, visible, confirmLoading,likes,name,events} = this.state;\n\n    return (\n      [ <AddEvent/>,\n      // <div className=\"list-events\">\n      //   <List\n      //     itemLayout=\"vertical\"\n      //     size=\"large\"\n      //     dataSource={events}\n      //     renderItem={item => (\n      //       <List.Item\n      //         key={item.name}\n      //         actions={\n      //           !eventLoading && [\n                 \n      //             <span key=\"comment-basic-like\">\n      //               <Tooltip title=\"Like\">\n      //               <Icon type=\"like-o\" key=\"skeleton-star-o\" />\n      //               </Tooltip>\n      //               <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\n      //             </span>,\n      //              <span key=\"comment-basic-like\">\n      //               <Tooltip title=\"Like\">\n      //               <Icon type=\"dislike-o\" key=\"skeleton-like-o\" />\n      //               </Tooltip>\n      //               <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\n      //             </span>,\n      //              <span key=\"comment-basic-like\">\n      //               <Tooltip title=\"Like\">\n      //               <Icon type=\"message\" key=\"skeleton-message\" onClick={this.showModal} />\n      //               </Tooltip>\n      //               <span style={{ paddingLeft: 8, cursor: 'auto' }}>{likes}</span>\n      //             </span>,\n      //           ]\n      //         }\n      //         extra={\n      //           !eventLoading && (\n      //             <img\n      //               width={272}\n      //               alt=\"logo\"\n      //               src={item.images}\n      //             />\n      //           )\n      //         }\n              \n      //       >\n      //               <CommentModal  name={item.name} user={item.user} event={item} showModal={this.showModal} handleCancel={this.handleCancel} confirmLoading={confirmLoading} visible={visible} handleOk={this.handleOk} />\n\n      //         <Skeleton loading={eventLoading} active avatar>\n      //           <List.Item.Meta\n      //             avatar={<Avatar src={item.user.image} />}\n      //             title={<a>{item.user.user_name}</a>}\n      //             // description={item.name}\n      //           />\n      //           <Meta title={item.name}/>\n      //           <Divider/>\n      //           <Text strong> {item.description}</Text>\n               \n      //         </Skeleton>\n      //         <Progress percent={90} />\n      //       </List.Item>\n      //     )}\n      //   />\n      // </div>]\n      <Card title= {<Meta\n      avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n      title=\"Card title\"\n    />}\n       style={{ width: 500 }} \n       >\n      \n       \n      <Card\n    style={{ width: 452 }}\n    cover={\n      <img\n        alt=\"example\"\n        src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n      />\n    }\n    actions={[\n      <Icon type=\"setting\" key=\"setting\" />,\n      <Icon type=\"edit\" key=\"edit\" />,\n      <Icon type=\"ellipsis\" key=\"ellipsis\" />,\n    ]}\n  >\n    <Meta\n      // avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n      title=\"Card title\"\n      description=\"This is the description\"\n    />\n  </Card>\n  </Card>]\n    );\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}