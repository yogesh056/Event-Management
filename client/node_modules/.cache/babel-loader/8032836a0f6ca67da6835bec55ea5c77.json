{"ast":null,"code":"// import React from 'react';\n// import 'antd/dist/antd.css';\n// import {\n//   Drawer,\n//   Form,\n//   Input,\n//   Select,\n//   Row,\n//   Col,\n//   DatePicker ,\n//   Button,\n//   Layout\n// } from 'antd';\n// import moment from 'moment';\n// import {signin} from \"../../middleware/users\"\n// const { Header, Content, Footer, Sider } = Layout;\n// const { Option } = Select;\n// class Signin extends React.Component {\n//   state = {\n//     confirmDirty: false,\n//     autoCompleteResult: [],\n//   };\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.form.validateFieldsAndScroll((err, values) => {\n//       if (!err) {\n//         values.country=\"India\"\n//         values.city=\"India\"\n//         values.state=\"India\"\n//         let response=signin(values)\n//         console.log(response)\n//       }\n//     });\n//   };\n//   handleConfirmBlur = e => {\n//     const { value } = e.target;\n//     this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n//   };\n//   render() {\n//     const { visible } = this.props;\n//     const { getFieldDecorator } = this.props.form;\n//     return (\n//         <Form onSubmit={this.handleSubmit}>\n//           <Row gutter={16}>\n//             <Col span={8}>\n//               <Form.Item label=\"First Name\">\n//                 {getFieldDecorator('first_name', {\n//                   rules: [{ required: true, message: 'Please enter First Name' }],\n//                 })(<Input placeholder=\"Please enter First Name\" />)}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label=\"Last Name\">\n//                 {getFieldDecorator('last_name', {\n//                   rules: [{ required: true, message: 'Please enter Last Name' }],\n//                 })(\n//                   <Input placeholder=\"Please enter Last Name\" />,\n//                 )}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//             <Form.Item label=\"User Name\">\n//             {getFieldDecorator('user_name', {\n//               rules: [\n//                 {\n//                   required: true,\n//                   message: 'Please input your User Name!',\n//                 },\n//               ],\n//             })(<Input />)}\n//           </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={16}>\n//             <Col span={12}>\n//             <Form.Item label=\"E-mail\">\n//             {getFieldDecorator('email', {\n//               rules: [\n//                 {\n//                   type: 'email',\n//                   message: 'The input is not valid E-mail!',\n//                 },\n//                 {\n//                   required: true,\n//                   message: 'Please input your E-mail!',\n//                 },\n//               ],\n//             })(<Input />)}\n//           </Form.Item>\n//           </Col>\n//           <Col span={12}>\n//           <Form.Item label=\"Secret Key\" extra=\"We must make sure that your are a valid user.\">\n//           <Row gutter={8}>\n//             <Col span={12}>\n//               {getFieldDecorator('secretKey', {\n//                 rules: [{ required: true, message: 'Please input the secret key you got!' }],\n//               })(<Input />)}\n//             </Col>\n//             <Col span={12}>\n//               <Button>Verify Mail</Button>\n//             </Col>\n//           </Row>\n//         </Form.Item>\n//           </Col>\n//           </Row>\n//           <Form.Item label=\"Password\" hasFeedback>\n//             {getFieldDecorator('password', {\n//               rules: [\n//                 {\n//                   required: true,\n//                   message: 'Please input your password!',\n//                 },\n//                 {\n//                   validator: this.validateToNextPassword,\n//                 },\n//               ],\n//             })(<Input.Password />)}\n//           </Form.Item>\n//           <Row gutter={16}>\n//             <Col span={12}>\n//           <Form.Item label=\"Gender\"\n//           >\n//             {getFieldDecorator('gender', {\n//               rules: [{ required: true, message: 'Please input your gender!' }],\n//             })(<Select defaultValue=\"male\" style={{ width: 120 }} >\n//       <Option value=\"male\">Maler</Option>\n//       <Option value=\"female\">Female</Option>\n//     </Select>)}\n//           </Form.Item>\n//           </Col>\n//           <Col span={12}>\n//           <Form.Item label=\"Date of Birth\">\n//           {getFieldDecorator('dob', {\n//             rules: [{ required: true, message: 'Please Select DOB' }],\n//           })(\n//             <DatePicker defaultValue={moment('2015-01-01', 'YYYY-MM-DD')} format='YYYY-MM-DD'/>\n//           )}\n//         </Form.Item>\n//           </Col>\n//           </Row>\n//           <Form.Item label=\"Phone Number\">\n//             {getFieldDecorator('phone', {\n//               rules: [{ required: true, message: 'Please input your phone number!' }],\n//             })(<Input style={{ width: '100%' }} />)}\n//           </Form.Item>\n//           {/* <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n//           <Row gutter={8}>\n//             <Col span={12}>\n//               {getFieldDecorator('captcha', {\n//                 rules: [{ required: true, message: 'Please input the captcha you got!' }],\n//               })(<Input />)}\n//             </Col>\n//             <Col span={12}>\n//               <Button>Get captcha</Button>\n//             </Col>\n//           </Row>\n//         </Form.Item> */}\n//           <Button type=\"primary\" htmlType=\"submit\">\n//             Register\n//           </Button>\n//         </Form>    \n//     );\n//   }\n// }\n// export const WrappedSignin = Form.create({ name: 'register' })(Signin);","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Signin/Signin.jsx"],"names":[],"mappingssourcesContent":["\n// import React from 'react';\n// import 'antd/dist/antd.css';\n// import {\n//   Drawer,\n//   Form,\n//   Input,\n//   Select,\n//   Row,\n//   Col,\n//   DatePicker ,\n//   Button,\n//   Layout\n// } from 'antd';\n// import moment from 'moment';\n\n// import {signin} from \"../../middleware/users\"\n// const { Header, Content, Footer, Sider } = Layout;\n\n// const { Option } = Select;\n// class Signin extends React.Component {\n//   state = {\n//     confirmDirty: false,\n//     autoCompleteResult: [],\n//   };\n\n\n//   handleSubmit = e => {\n//     e.preventDefault();\n//     this.props.form.validateFieldsAndScroll((err, values) => {\n//       if (!err) {\n//         values.country=\"India\"\n//         values.city=\"India\"\n//         values.state=\"India\"\n//         let response=signin(values)\n//         console.log(response)\n//       }\n//     });\n//   };\n\n//   handleConfirmBlur = e => {\n//     const { value } = e.target;\n//     this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n//   };\n\n\n//   render() {\n//     const { visible } = this.props;\n//     const { getFieldDecorator } = this.props.form;\n\n//     return (\n//         <Form onSubmit={this.handleSubmit}>\n//           <Row gutter={16}>\n//             <Col span={8}>\n//               <Form.Item label=\"First Name\">\n//                 {getFieldDecorator('first_name', {\n//                   rules: [{ required: true, message: 'Please enter First Name' }],\n//                 })(<Input placeholder=\"Please enter First Name\" />)}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//               <Form.Item label=\"Last Name\">\n//                 {getFieldDecorator('last_name', {\n//                   rules: [{ required: true, message: 'Please enter Last Name' }],\n//                 })(\n//                   <Input placeholder=\"Please enter Last Name\" />,\n//                 )}\n//               </Form.Item>\n//             </Col>\n//             <Col span={8}>\n//             <Form.Item label=\"User Name\">\n//             {getFieldDecorator('user_name', {\n//               rules: [\n//                 {\n//                   required: true,\n//                   message: 'Please input your User Name!',\n//                 },\n//               ],\n//             })(<Input />)}\n//           </Form.Item>\n//             </Col>\n//           </Row>\n//           <Row gutter={16}>\n//             <Col span={12}>\n//             <Form.Item label=\"E-mail\">\n//             {getFieldDecorator('email', {\n//               rules: [\n//                 {\n//                   type: 'email',\n//                   message: 'The input is not valid E-mail!',\n//                 },\n//                 {\n//                   required: true,\n//                   message: 'Please input your E-mail!',\n//                 },\n//               ],\n//             })(<Input />)}\n//           </Form.Item>\n//           </Col>\n//           <Col span={12}>\n         \n//           <Form.Item label=\"Secret Key\" extra=\"We must make sure that your are a valid user.\">\n//           <Row gutter={8}>\n//             <Col span={12}>\n//               {getFieldDecorator('secretKey', {\n//                 rules: [{ required: true, message: 'Please input the secret key you got!' }],\n//               })(<Input />)}\n//             </Col>\n//             <Col span={12}>\n//               <Button>Verify Mail</Button>\n//             </Col>\n//           </Row>\n//         </Form.Item>\n//           </Col>\n//           </Row>\n//           <Form.Item label=\"Password\" hasFeedback>\n//             {getFieldDecorator('password', {\n//               rules: [\n//                 {\n//                   required: true,\n//                   message: 'Please input your password!',\n//                 },\n//                 {\n//                   validator: this.validateToNextPassword,\n//                 },\n//               ],\n//             })(<Input.Password />)}\n//           </Form.Item>\n//           <Row gutter={16}>\n//             <Col span={12}>\n//           <Form.Item label=\"Gender\"\n//           >\n//             {getFieldDecorator('gender', {\n//               rules: [{ required: true, message: 'Please input your gender!' }],\n//             })(<Select defaultValue=\"male\" style={{ width: 120 }} >\n//       <Option value=\"male\">Maler</Option>\n//       <Option value=\"female\">Female</Option>\n//     </Select>)}\n//           </Form.Item>\n//           </Col>\n//           <Col span={12}>\n//           <Form.Item label=\"Date of Birth\">\n//           {getFieldDecorator('dob', {\n//             rules: [{ required: true, message: 'Please Select DOB' }],\n//           })(\n//             <DatePicker defaultValue={moment('2015-01-01', 'YYYY-MM-DD')} format='YYYY-MM-DD'/>\n//           )}\n//         </Form.Item>\n//           </Col>\n//           </Row>\n//           <Form.Item label=\"Phone Number\">\n//             {getFieldDecorator('phone', {\n//               rules: [{ required: true, message: 'Please input your phone number!' }],\n//             })(<Input style={{ width: '100%' }} />)}\n//           </Form.Item>\n          \n//           {/* <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n//           <Row gutter={8}>\n//             <Col span={12}>\n//               {getFieldDecorator('captcha', {\n//                 rules: [{ required: true, message: 'Please input the captcha you got!' }],\n//               })(<Input />)}\n//             </Col>\n//             <Col span={12}>\n//               <Button>Get captcha</Button>\n//             </Col>\n//           </Row>\n//         </Form.Item> */}\n//           <Button type=\"primary\" htmlType=\"submit\">\n//             Register\n//           </Button>\n          \n//         </Form>    \n      \n//     );\n//   }\n// }\n// export const WrappedSignin = Form.create({ name: 'register' })(Signin);\n"]},"metadata":{},"sourceType":"module"}