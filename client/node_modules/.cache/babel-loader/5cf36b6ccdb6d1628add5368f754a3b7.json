{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/components/LandingPage/Signin/Signin.jsx\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { storage } from '../../../firebase/index';\nimport { Drawer, Form, Input, Select, Row, Col, DatePicker, message, Upload, Button, Layout } from 'antd';\nimport moment from 'moment';\nimport { withRouter } from 'react-router';\nimport API from '../../../middleware/api';\nconst Option = Select.Option;\n\nclass Signin extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.uploadImage = e => {\n      console.log(\"heoll image\", e);\n      const img = e.target.files[0];\n      console.log(\"heoll image\", img);\n      this.setState({\n        img\n      });\n      const uploadTask = storage.ref(`images/${img.name}`).put(img);\n      uploadTask.on('state_changed', snapshot => {}, error => {\n        console.log(error);\n      }, () => {\n        storage.ref('images').child(img.name).getDownloadURL().then(url => {\n          console.log('uuu', url);\n          this.setState({\n            imgurl: url\n          }, () => {\n            console.log('123', this.state.imgurl);\n          });\n        });\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll(async (err, values) => {\n        if (!err) {\n          values.college = 1;\n          values.city = 2;\n          values.state = 3;\n          console.log(values);\n          let response;\n\n          try {\n            response = await API.post('/users/verify', {\n              email: values.email\n            });\n            console.log(response);\n            message.success(response.data.msg, 4);\n            this.props.next(values);\n          } catch (e) {\n            message.error(e.msg, 4);\n          }\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n  }\n\n  render() {\n    const current = this.state.current;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, getFieldDecorator('first_name', {\n      rules: [{\n        required: true,\n        message: 'Please enter First Name'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Please enter First Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, getFieldDecorator('last_name', {\n      rules: [{\n        required: true,\n        message: 'Please enter Last Name'\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"Please enter Last Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"User Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, getFieldDecorator('user_name', {\n      rules: [{\n        required: true,\n        message: 'Please input your User Name!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))))), React.createElement(Form.Item, {\n      label: \"E-mail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        type: 'email',\n        message: 'The input is not valid E-mail!'\n      }, {\n        required: true,\n        message: 'Please input your E-mail!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      label: \"Password\",\n      hasFeedback: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your password!'\n      }, {\n        validator: this.validateToNextPassword\n      }]\n    })(React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }))), React.createElement(\"input\", {\n      type: \"file\",\n      className: \"form-control\",\n      name: \"image\",\n      onChange: this.uploadImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(Row, {\n      gutter: 16,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Gender\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, getFieldDecorator('gender', {\n      rules: [{\n        required: true,\n        message: 'Please input your gender!'\n      }]\n    })(React.createElement(Select, {\n      defaultValue: \"male\",\n      style: {\n        width: 120\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"male\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Maler\"), React.createElement(Option, {\n      value: \"female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Female\"))))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Date of Birth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, getFieldDecorator('dob', {\n      rules: [{\n        required: true,\n        message: 'Please Select DOB'\n      }]\n    })(React.createElement(DatePicker, {\n      defaultValue: moment('2015-01-01', 'YYYY-MM-DD'),\n      format: \"YYYY-MM-DD\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }))))), React.createElement(Form.Item, {\n      label: \"Phone Number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, getFieldDecorator('phone', {\n      rules: [{\n        required: true,\n        message: 'Please input your phone number!'\n      }]\n    })(React.createElement(Input, {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }))), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Next\"));\n  }\n\n}\n\nexport const WrappedSignin = Form.create({\n  name: 'register'\n})(withRouter(Signin));","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/LandingPage/Signin/Signin.jsx"],"names":["React","storage","Drawer","Form","Input","Select","Row","Col","DatePicker","message","Upload","Button","Layout","moment","withRouter","API","Option","Signin","Component","constructor","props","uploadImage","e","console","log","img","target","files","setState","uploadTask","ref","name","put","on","snapshot","error","child","getDownloadURL","then","url","imgurl","state","handleSubmit","preventDefault","form","validateFieldsAndScroll","err","values","college","city","response","post","email","success","data","msg","next","handleConfirmBlur","value","confirmDirty","autoCompleteResult","render","current","getFieldDecorator","rules","required","type","validator","validateToNextPassword","width","WrappedSignin","create"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport {storage} from '../../../firebase/index';\n\nimport {\n  Drawer,\n  Form,\n  Input,\n  Select,\n  Row,\n  Col,\n \n  DatePicker ,\n  message,\n  Upload,\n  Button,\n  Layout\n} from 'antd';\nimport moment from 'moment';\nimport { withRouter } from 'react-router'\n\nimport API from '../../../middleware/api';\nconst { Option } = Select;\nclass Signin extends React.Component {\n  constructor(props)\n  {\n    super(props);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n  }\n  uploadImage=(e)=>\n  {\n    console.log(\"heoll image\",e)\n    const img=e.target.files[0];\n    console.log(\"heoll image\",img)\n    this.setState(({img}));\n  const uploadTask=storage.ref(`images/${img.name}`).put(img);\n    uploadTask.on('state_changed',(snapshot)=>{},\n    (error)=>{console.log(error)},\n    ()=>{\n      storage.ref('images').child(img.name).getDownloadURL().then(url=>{console.log('uuu',url)\n      this.setState({imgurl:url},()=>{\n        console.log('123',this.state.imgurl)\n      })\n      \n      })\n    })\n  }\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll(async(err, values) => {\n      if (!err) {\n        values.college=1\n        values.city=2\n        values.state=3\n        console.log(values)\n        let response\n        try{\n          response= await API.post('/users/verify',{email:values.email})\n          console.log(response)\n          message.success(response.data.msg,4);\n          this.props.next(values)\n        }\n        catch(e)\n        {\n          message.error(e.msg,4);\n        }\n      \n      }\n     \n    });\n  };\n\n  handleConfirmBlur = e => {\n    const { value } = e.target;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n\n  render() {\n    const { current } = this.state;\n\n    const { getFieldDecorator } = this.props.form;\n\n    return (\n                <Form onSubmit={this.handleSubmit}>\n          <Row gutter={16}>\n            <Col span={8}>\n              <Form.Item label=\"First Name\">\n                {getFieldDecorator('first_name', {\n                  rules: [{ required: true, message: 'Please enter First Name' }],\n                })(<Input placeholder=\"Please enter First Name\" />)}\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n              <Form.Item label=\"Last Name\">\n                {getFieldDecorator('last_name', {\n                  rules: [{ required: true, message: 'Please enter Last Name' }],\n                })(\n                  <Input placeholder=\"Please enter Last Name\" />,\n                )}\n              </Form.Item>\n            </Col>\n            <Col span={8}>\n            <Form.Item label=\"User Name\">\n            {getFieldDecorator('user_name', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your User Name!',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>\n            </Col>\n          </Row>\n          \n            <Form.Item label=\"E-mail\">\n            {getFieldDecorator('email', {\n              rules: [\n                {\n                  type: 'email',\n                  message: 'The input is not valid E-mail!',\n                },\n                {\n                  required: true,\n                  message: 'Please input your E-mail!',\n                },\n              ],\n            })(<Input />)}\n          </Form.Item>\n         \n          <Form.Item label=\"Password\" hasFeedback>\n            {getFieldDecorator('password', {\n              rules: [\n                {\n                  required: true,\n                  message: 'Please input your password!',\n                },\n                {\n                  validator: this.validateToNextPassword,\n                },\n              ],\n            })(<Input.Password />)}\n          </Form.Item>\n          {/* <Form.Item label=\"Upload\" >\n          {getFieldDecorator('upload', {\n            valuePropName: 'fileList',\n            getValueFromEvent:this.uploadImage,\n          })( */}\n            <input\n                  type=\"file\"\n                  className=\"form-control\"\n                  name=\"image\"\n                  \n                 \n                  onChange={this.uploadImage}\n                />\n{/* \n          )}\n        </Form.Item> */}\n          <Row gutter={16}>\n            <Col span={12}>\n          <Form.Item label=\"Gender\"\n          >\n            {getFieldDecorator('gender', {\n              rules: [{ required: true, message: 'Please input your gender!' }],\n            })(<Select defaultValue=\"male\" style={{ width: 120 }} >\n      <Option value=\"male\">Maler</Option>\n      <Option value=\"female\">Female</Option>\n    </Select>)}\n          </Form.Item>\n          </Col>\n          <Col span={12}>\n          <Form.Item label=\"Date of Birth\">\n          {getFieldDecorator('dob', {\n            rules: [{ required: true, message: 'Please Select DOB' }],\n          })(\n            <DatePicker defaultValue={moment('2015-01-01', 'YYYY-MM-DD')} format='YYYY-MM-DD'/>\n          )}\n        </Form.Item>\n          </Col>\n          </Row>\n          <Form.Item label=\"Phone Number\">\n            {getFieldDecorator('phone', {\n              rules: [{ required: true, message: 'Please input your phone number!' }],\n            })(<Input style={{ width: '100%' }} />)}\n          </Form.Item>\n          \n          {/* <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\n          <Row gutter={8}>\n            <Col span={12}>\n              {getFieldDecorator('captcha', {\n                rules: [{ required: true, message: 'Please input the captcha you got!' }],\n              })(<Input />)}\n            </Col>\n            <Col span={12}>\n              <Button>Get captcha</Button>\n            </Col>\n          </Row>\n        </Form.Item> */}\n          <Button type=\"primary\" htmlType=\"submit\">\n            Next\n          </Button>\n          \n        </Form>    \n        \n    );\n  }\n}\nexport const WrappedSignin = Form.create({ name: 'register' })(withRouter(Signin));\n"]},"metadata":{},"sourceType":"module"}