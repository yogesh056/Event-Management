{"ast":null,"code":"import _objectSpread from \"/Users/yogeshwaranramesh/College/Event-Management/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/components/LandingPage/Login/Login.jsx\";\nimport { Form, Drawer, Icon, Input, Row, Col, Button, Checkbox, message, Layout } from 'antd';\nimport React from 'react';\nimport { login } from \"../../../middleware/users\";\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\nimport API from '../../../middleware/api';\nimport Auth from '../../../auth/ProtectedRoute';\nconst Header = Layout.Header,\n      Content = Layout.Content;\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.responseGoogle = async googleLogin => {\n      let response = googleLogin.profileObj;\n\n      try {\n        response = await API.post('/users/signin', {\n          \"first_name\": response.givenName,\n          \"last_name\": response.familyName,\n          \"user_name\": response.givenName,\n          \"password\": \"googleLogin\",\n          \"email\": response.email,\n          \"phone\": null,\n          \"dob\": null,\n          \"college\": null,\n          \"city\": null,\n          \"state\": null,\n          \"gender\": \"\",\n          \"image\": response.imageUrl\n        });\n        response.data.code === 200 ? message.success(response.data.msg, 4) : message.error(e.msg, 4);\n        localStorage.setItem(\"user_id\", response.data.user_id);\n        Auth.authenticate();\n        this.props.history.push('/');\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields(async (err, values) => {\n        if (!err) {\n          console.log(values.email, values);\n          let payload = {\n            email: values.email,\n            password: values.password\n          };\n          let response = await login(_objectSpread({}, payload));\n          Auth.authenticate();\n          this.props.history.push('/');\n          localStorage.setItem(\"user_id\", response.data.user_id);\n          message.success(response.data.msg, 5);\n        }\n      });\n    };\n\n    console.log(this.props);\n    this.state = {};\n  }\n\n  render() {\n    const visible = this.props.visible;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Header, {\n      style: {\n        background: '#fff',\n        padding: '50px 100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(Layout, {\n      style: {\n        background: '#ffffff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Content, {\n      style: {\n        background: '#fff',\n        padding: 24,\n        margin: ' 0 auto',\n        minHeight: 280,\n        width: '400px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        message: 'Please input your email!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        required: true,\n        message: 'Please input your Password!'\n      }]\n    })(React.createElement(Input, {\n      prefix: React.createElement(Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }))), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      block: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Log in\"), \"or \", React.createElement(Link, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"register now!\")), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(GoogleLogin, {\n      clientId: \"335076764870-kt05hkuptqi7g2qmsoqnvk96oivcslrj.apps.googleusercontent.com\",\n      render: renderProps => React.createElement(Button, {\n        type: \"link\",\n        onClick: renderProps.onClick,\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"google\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), \" Login with Google\"),\n      buttonText: \"Login\",\n      onSuccess: this.responseGoogle,\n      onFailure: this.responseGoogle,\n      cookiePolicy: 'single_host_origin',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \",\")))));\n  }\n\n}\n\nexport const WrappedLogin = Form.create({\n  name: 'normal_login'\n})(withRouter(Login));","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/LandingPage/Login/Login.jsx"],"names":["Form","Drawer","Icon","Input","Row","Col","Button","Checkbox","message","Layout","React","login","withRouter","Link","GoogleLogin","API","Auth","Header","Content","Login","Component","constructor","props","responseGoogle","googleLogin","response","profileObj","post","givenName","familyName","email","imageUrl","data","code","success","msg","error","e","localStorage","setItem","user_id","authenticate","history","push","console","log","handleSubmit","preventDefault","form","validateFields","err","values","payload","password","state","render","visible","getFieldDecorator","background","padding","margin","minHeight","width","rules","required","color","renderProps","onClick","WrappedLogin","create","name"],"mappings":"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","sourcesContent":["import { Form,Drawer, Icon, Input,Row,Col, Button, Checkbox ,message,Layout} from 'antd';\nimport React from 'react';\nimport {login} from \"../../../middleware/users\"\nimport { withRouter } from 'react-router-dom'\nimport { Link } from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\nimport API from '../../../middleware/api';\nimport Auth from '../../../auth/ProtectedRoute';\n\nconst { Header, Content } = Layout;\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props)\n    this.state={\n\n    }\n  }\n  responseGoogle = async(googleLogin) => {\n    let response= googleLogin.profileObj\n   \n                  try{\n                      response = await API.post('/users/signin',\n                      {\n                          \"first_name\": response.givenName,\n                          \"last_name\": response.familyName,\n                          \"user_name\": response.givenName,\n                          \"password\":\"googleLogin\",\n                          \"email\": response.email,\n                          \"phone\":null,\n                          \"dob\": null,\n                          \"college\": null,\n                          \"city\": null,\n                          \"state\": null,\n                          \"gender\":\"\",\n                          \"image\": response.imageUrl,\n                      })\n                      response.data.code===200?message.success(response.data.msg,4): message.error(e.msg,4); \n                      localStorage.setItem(\"user_id\",response.data.user_id)\n                      Auth.authenticate()\n                      this.props.history.push('/')\n                    }\n                    catch(e)\n                    {\n                      console.log(e)\n                    \n                    }\n  \n  }\n  handleSubmit =  (e) => {\n    e.preventDefault();\n    this.props.form.validateFields(async(err, values) => {\n      if (!err) {\n        console.log(values.email,values)\n        let payload={\n          email:values.email,\n          password:values.password\n        }\n        let response=await login({...payload})\n        Auth.authenticate()\n        this.props.history.push('/')\n        localStorage.setItem(\"user_id\",response.data.user_id)\n\n        message.success(response.data.msg, 5);\n      }\n    });\n  };\n\n  render() {\n    const { visible } = this.props;\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Layout>\n                <Header style={{ background: '#fff', padding: '50px 100px' }}>\n                    \n                </Header>\n                <Layout style={{ background: '#ffffff' }}>\n                    <Content style={{ background: '#fff', padding: 24, margin: ' 0 auto', minHeight: 280,width:'400px' }}>\n\n\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item>\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: 'Please input your email!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"Username\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />,\n          )}\n        </Form.Item>\n        <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\"  block>\n            Log in\n          </Button>\n         \n       or <Link to=\"/signin\">register now!</Link>\n  \n        </Form.Item>\n        <Form.Item>\n        <GoogleLogin\n    clientId=\"335076764870-kt05hkuptqi7g2qmsoqnvk96oivcslrj.apps.googleusercontent.com\"\n    render={renderProps => (\n       <Button type=\"link\" onClick={renderProps.onClick} block>\n       <Icon type=\"google\" /> Login with Google\n       </Button>\n    )}\n    buttonText=\"Login\"\n    onSuccess={this.responseGoogle}\n    onFailure={this.responseGoogle}\n    cookiePolicy={'single_host_origin'}\n  />,\n       \n        </Form.Item>\n      </Form>\n                    </Content>\n                </Layout>\n            </Layout >\n     \n    );\n  }\n}\n\nexport const WrappedLogin = Form.create({ name: 'normal_login' })(withRouter(Login));"]},"metadata":{},"sourceType":"module"}