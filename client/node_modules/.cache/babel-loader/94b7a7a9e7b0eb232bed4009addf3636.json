{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Signin/VerifyMail.jsx\";\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport { Drawer, Form, Input, Select, Row, Col, Icon, Steps, DatePicker, message, Button, Layout } from 'antd';\nimport moment from 'moment';\nimport API from '../../middleware/api';\nconst Option = Select.Option;\n\nclass VerifyMail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: []\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFieldsAndScroll(async (err, values) => {\n        if (!err) {\n          console.log(this.props.value);\n          this.props.value.secretKey = values.secretKey;\n\n          try {\n            response = await API.post('/users/verify', {\n              email: values.email\n            });\n            message.success(response.msg, 4);\n            this.props.next(values);\n          } catch (e) {\n            message.error(e.msg, 4);\n          }\n\n          let response = await API.post('/users/signin', {\n            \"first_name\": this.props.value.first_name,\n            \"last_name\": this.props.value.last_name,\n            \"user_name\": this.props.value.user_name,\n            \"password\": this.props.value.password,\n            \"secretKey\": values.secretKey,\n            \"email\": this.props.value.email,\n            \"phone\": this.props.value.phone,\n            \"dob\": this.props.value.dob,\n            \"college\": 1,\n            \"city\": 1,\n            \"state\": 1,\n            \"gender\": this.props.value.gender,\n            \"image\": \"testImage\"\n          });\n          message.success(response.msg, 4);\n        }\n      });\n    };\n\n    this.handleConfirmBlur = e => {\n      const value = e.target.value;\n      this.setState({\n        confirmDirty: this.state.confirmDirty || !!value\n      });\n    };\n  }\n\n  render() {\n    const current = this.state.current;\n    const getFieldDecorator = this.props.form.getFieldDecorator;\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Form.Item, {\n      label: \"Secret Key\",\n      extra: \"We must make sure that your are a valid user.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Row, {\n      gutter: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, getFieldDecorator('secretKey', {\n      rules: [{\n        required: true,\n        message: 'Please input the secret key you got!'\n      }]\n    })(React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(Col, {\n      span: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Re-Send\")))), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Register\"), React.createElement(Button, {\n      onClick: this.props.previous,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Previous\"));\n  }\n\n}\n\nexport const WrappedVerifyMail = Form.create({\n  name: 'register'\n})(VerifyMail);","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Signin/VerifyMail.jsx"],"names":["React","Drawer","Form","Input","Select","Row","Col","Icon","Steps","DatePicker","message","Button","Layout","moment","API","Option","VerifyMail","Component","state","confirmDirty","autoCompleteResult","handleSubmit","e","preventDefault","props","form","validateFieldsAndScroll","err","values","console","log","value","secretKey","response","post","email","success","msg","next","error","first_name","last_name","user_name","password","phone","dob","gender","handleConfirmBlur","target","setState","render","current","getFieldDecorator","rules","required","previous","WrappedVerifyMail","create","name"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport 'antd/dist/antd.css';\nimport {\n    Drawer,\n    Form,\n    Input,\n    Select,\n    Row,\n    Col,\n    Icon,\n    Steps,\n    DatePicker,\n    message,\n    Button,\n    Layout\n} from 'antd';\nimport moment from 'moment';\nimport API from '../../middleware/api';\nconst { Option } = Select;\nclass VerifyMail extends React.Component {\n    state = {\n        confirmDirty: false,\n        autoCompleteResult: [],\n    };\n\n\n    handleSubmit =(e)=> {\n        e.preventDefault();\n        this.props.form.validateFieldsAndScroll(async(err, values) => {\n            if (!err) {\n                console.log(this.props.value)\n                this.props.value.secretKey = values.secretKey\n                try{\n                    response= await API.post('/users/verify',{email:values.email})\n                    message.success(response.msg,4);\n                    this.props.next(values)\n                  }\n                  catch(e)\n                  {\n                    message.error(e.msg,4);\n                  }\n                let response = await API.post('/users/signin',\n                    {\n                        \"first_name\": this.props.value.first_name,\n                        \"last_name\": this.props.value.last_name,\n                        \"user_name\": this.props.value.user_name,\n                        \"password\": this.props.value.password,\n                        \"secretKey\": values.secretKey,\n                        \"email\": this.props.value.email,\n                        \"phone\": this.props.value.phone,\n                        \"dob\": this.props.value.dob,\n                        \"college\": 1,\n                        \"city\": 1,\n                        \"state\": 1,\n                        \"gender\": this.props.value.gender,\n                        \"image\": \"testImage\"\n                    }\n                )\n                message.success(response.msg,4);\n            }\n        });\n    };\n\n    handleConfirmBlur = e => {\n        const { value } = e.target;\n        this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n    };\n\n\n    render() {\n        const { current } = this.state;\n\n        const { getFieldDecorator } = this.props.form;\n\n        return (\n            <Form onSubmit={this.handleSubmit}>\n\n\n                <Form.Item label=\"Secret Key\" extra=\"We must make sure that your are a valid user.\">\n                    <Row gutter={8}>\n                        <Col span={12}>\n                            {getFieldDecorator('secretKey', {\n                                rules: [{ required: true, message: 'Please input the secret key you got!' }],\n                            })(<Input />)}\n                        </Col>\n                        <Col span={12}>\n                            <Button>Re-Send</Button>\n                        </Col>\n                    </Row>\n                </Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                    Register\n          </Button>\n                <Button onClick={this.props.previous}>\n                    Previous\n          </Button>\n            </Form>\n\n        );\n    }\n}\nexport const WrappedVerifyMail = Form.create({ name: 'register' })(VerifyMail);\n"]},"metadata":{},"sourceType":"module"}