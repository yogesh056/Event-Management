{"ast":null,"code":"var _jsxFileName = \"/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Navbar/Navbar.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport 'antd/dist/antd.css';\nimport { Menu, Icon, Avatar } from 'antd';\nimport \"../Navbar/Navbar.css\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nconst SubMenu = Menu.SubMenu; // import { WrappedLogin } from '../Login/Login'\n\nexport default class Navbar extends Component {\n  constructor() {\n    super();\n\n    this.handleClick = e => {\n      console.log('click ', e);\n      this.setState({\n        current: e.key\n      }, () => {\n        console.log(this.state);\n      });\n    };\n\n    this.state = {\n      current: 'mail',\n      isLogged: false\n    };\n  }\n\n  componentWillMount() {\n    let isLogged = localStorage.getItem('user_id');\n\n    if (isLogged) {\n      this.setState({\n        isLogged: true\n      }, () => {\n        console.log(this.state);\n      });\n    }\n  }\n\n  conditionalRender() {\n    const isLogged = this.state.isLogged;\n\n    if (!isLogged) {\n      return [React.createElement(Menu.Item, {\n        key: \"signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \" \", React.createElement(Icon, {\n        type: \"mail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), \"Sign up\")), React.createElement(Menu.Item, {\n        key: \"login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"   \", React.createElement(Icon, {\n        type: \"appstore\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), \"Log in\"))];\n    } else {\n      return React.createElement(SubMenu, {\n        title: React.createElement(Avatar, {\n          src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Menu.ItemGroup, {\n        title: \"Profile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Menu.Item, {\n        key: \"settings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Settings\")), React.createElement(Menu.Item, {\n        key: \"logout\",\n        onClick: this.onCli,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Logout\"));\n    }\n  } // selectedKeys={[this.state.current]} \n\n\n  render() {\n    return React.createElement(Menu, {\n      onClick: this.handleClick,\n      mode: \"horizontal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.conditionalRender());\n  }\n\n}","map":{"version":3,"sources":["/Users/yogeshwaranramesh/College/Event-Management/client/src/components/Navbar/Navbar.jsx"],"names":["React","Component","Fragment","Menu","Icon","Avatar","Redirect","Link","SubMenu","Navbar","constructor","handleClick","e","console","log","setState","current","key","state","isLogged","componentWillMount","localStorage","getItem","conditionalRender","onCli","render"],"mappings":"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","sourcesContent":["\nimport React, { Component, Fragment } from \"react\";\nimport 'antd/dist/antd.css';\nimport { Menu, Icon, Avatar } from 'antd';\nimport \"../Navbar/Navbar.css\"\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Link\n} from \"react-router-dom\";\n\nconst { SubMenu } = Menu;\n// import { WrappedLogin } from '../Login/Login'\nexport default class Navbar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      current: 'mail',\n      isLogged: false\n    };\n  }\n  componentWillMount() {\n    let isLogged = localStorage.getItem('user_id')\n    if (isLogged) {\n      this.setState({ isLogged: true },()=>{console.log(this.state)})\n    }\n  }\n  handleClick = e => {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    }, () => {\n      console.log(this.state)\n    });\n  };\n  conditionalRender() {\n    const { isLogged } = this.state\n    if (!isLogged) {\n      return (\n        [\n        <Menu.Item key=\"signin\">\n          <Link to=\"/signin\"> <Icon type=\"mail\" />Sign up</Link>\n        </Menu.Item>,\n        <Menu.Item key=\"login\" >\n\n          <Link to=\"/login\">   <Icon type=\"appstore\" />Log in</Link>\n        </Menu.Item>\n        ]\n      )\n    }\n    else {\n      return(\n        <SubMenu\n          title={\n            <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n          }\n        >\n          <Menu.ItemGroup title=\"Profile\">\n            <Menu.Item key=\"settings\">Settings</Menu.Item>\n            {/* <Menu.Item key=\"setting:2\">Option 2</Menu.Item> */}\n          </Menu.ItemGroup>\n          {/* <Menu.ItemGroup title=\"Item 2\"> */}\n          <Menu.Item key=\"logout\" onClick={this.onCli}>Logout</Menu.Item>\n          {/* <Menu.Item key=\"setting:4\">Option 4</Menu.Item> */}\n          {/* </Menu.ItemGroup> */}\n        </SubMenu>\n      )\n    }\n  }\n  // selectedKeys={[this.state.current]} \n  render() {\n   \n    return (\n      <Menu onClick={this.handleClick} mode=\"horizontal\">\n        {this.conditionalRender()}\n\n      </Menu>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}